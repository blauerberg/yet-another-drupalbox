---
vagrant_box: centos/7
vagrant_username: vagrant
vagrant_hostname: yet-another-drupalbox.local
vagrant_machine_name: yet-another-drupalbox

# see: https://www.vagrantup.com/docs/vagrantfile/ssh_settings.html
vagrant_ssh_private_key_path: ~/.ssh/id_rsa
vagrant_ssh_public_key_path: ~/.ssh/id_rsa.pub

# See: https://www.vagrantup.com/docs/networking/private_network.html
vagrant_private_ip: 192.168.33.10

# See: https://docs.vagrantup.com/v2/networking/public_network.html
vagrant_public_ip: ""

# See: http://docs.drupalvm.com/en/latest/extras/syncing-folders/
vagrant_vm_synced_folder:
  - local_path: ~/Sites/yet-another-drupalbox
    vm_path: "{{ drupal_root_path }}"
    type: nfs
    create: true
    bindfs:
      path: '/vagrant-bindfs'
      user: 'nginx'
      group: 'nginx'
      perms: 'u=rwX:g=rwD'
      options: 'nonempty'

# virtualbox vm spec
vagrant_vm_cpus: 4
vagrant_vm_memory: 4096

# DigitalOcean droplet configuration
digitalocean_box_url: 'https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box'
digitalocean_image: 'centos-7-0-x64'
digitalocean_region: 'sgp1'
digitalocean_size: '512mb'
digitalocean_backup_enabled: false

# AWS configuration
aws:
  keypair_name: 'YOUR_KEYPAIR_NAME'
  ami: 'ami-0c11b26d' # see https://aws.amazon.com/amazon-linux-ami/
  aws_profile: 'default'
  region: 'ap-northeast-1'
  instance_type: 't2.nano'
  ssh_host_attribute: 'public_ip_address'
  monitoring: true
  #elastic_ip: true
  #iam_instance_profile_name: 'YOUR_IAM_ROLE_NAME'
  tags:
    Name: 'yet-another-drupalbox'
  # more options: https://github.com/mitchellh/vagrant-aws#configuration

# Azure configuration
azure:
  resource_group_name: 'YOUR_RESOURCE_GROUP_NAME'
  location: 'japaneast'
  vm_name: 'yet-another-drupalbox'
  vm_image_urn: 'OpenLogic:CentOS:7.2n:7.2.20160629' # see https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-cli-ps-findimage/
  vm_size: 'Standard_A0'
  # more options: https://github.com/Azure/vagrant-azure

# Cloud init
# user_data_path: /Users/username/cloud-init/user_data.yml

# Set this to false if you don't need to install drupal
drupal_site_install: true

# Which version of Drupal to deploy
drupal_major_version: 8
drupal_version: 8.2.6

# options for drupal installation
drupal_on_synced_folder: true
drupal_root_path: /var/www/drupal
drupal_site_name: "{{ vagrant_hostname }}"
drupal_site_install_profile: standard
drupal_site_install_extra_args: []
drupal_account_name: admin
drupal_account_pass: admin
drupal_database_host: localhost
drupal_database_port: 3306
drupal_database_name: drupal
drupal_database_user: drupal
drupal_database_password: drupal

drupal_extra_modules:
  - devel
  - admin_toolbar

# enable & disable modules after installation.
# it's install_site = true
drupal_enable_modules:
  - devel
  - admin_toolbar
  - admin_toolbar_tools

drupal_disable_modules: []

# Composer
# NOTE: currently composer_version does not affect anything.
# composer_version: 1.0.0
composer_global_packages:
  - { name: hirak/prestissimo, release: '^0.3' }
composer_global_configs:
  - "repos.packagist composer https://packagist.jp"

# Drush
drush_path: /usr/local/bin/drush
drush_version: 8.x

# DrupalConsole
drupalconsole_path: /usr/local/bin/drupal
drupalconsole_version: 1.0.0-rc10

# Extra features
extra_features:
  #- drupalconsole
  - nodejs
  #- solr # Sorry, currently does not support solr with Drupal8.
  #- mautic

# Nodejs
# currently supported "4.x", "5.x", "6.x", "7.x".
nodejs_version: "6.x"
nodejs_npm_global_packages:
  - grunt-cli
  - gulp
  - bower

# Mautic
mautic_root_path: /var/www/mautic
mautic_version: 2.1.1
mautic_site_name: "mautic.{{ vagrant_hostname }}"
mautic_database_host: localhost
mautic_database_port: 3306
mautic_database_name: mautic
mautic_database_user: mautic
mautic_database_password: mautic

# Extra packages you would like installed.
extra_packages:
  - zsh
  - rsync
  - unzip
  - htop
  - vim
  - gitflow # if you use Amazon Linux, comment out this line
  - ctags

# Cron jobs are added to the root user's crontab. Keys include name (required),
# minute, hour, day, weekday, month, job (required), and state.
cron_jobs: []
  #- {
  #    name: "Drupal Cron",
  #    minute: "*/30",
  #    job: "{{ druah_path }} -r {{ drupal_root_path }} core-cron"
  #  }
  #- {
  #    name: "Mautic: keep the segments current",
  #    minute: "0,15,30,45",
  #    user: "nginx",
  #    job: "php {{ mautic_root_path}}/app/console mautic:segments:update"
  #  }
  #- {
  #    name: "Mautic: keep campaigns updated with applicable contacts",
  #    minute: "5,20,35,50",
  #    user: "nginx",
  #    job: "php {{ mautic_root_path}}/app/console mautic:campaigns:rebuild"
  #  }
  #- {
  #    name: "Mautic: execute campaigns events",
  #    minute: "10,25,40,55",
  #    user: "nginx",
  #    job: "php {{ mautic_root_path}}/app/console mautic:campaigns:trigger"
  #  }

firewall_allowed_ports:
  - "22/tcp"
  - "80/tcp"
  - "443/tcp"
  - "9000/tcp"
  - "8025/tcp" # for mailhog

# Nginx
nginx_vhost_path: /etc/nginx/conf.d
nginx_hosts:
  - server_name: "adminer.{{ vagrant_hostname }}"
    root: "{{ adminer_install_dir }}"
    is_php: true

# php version, currently supported  "5.6", "7.0".
php_version: "7.0"
php_fpm_listen: /var/run/php-fpm/php-fpm.sock
php_fpm_listen_owner: nginx
php_fpm_listen_group: nginx
php_fpm_user: nginx
php_fpm_group: nginx
php_session_save_handler: files
php_session_save_path: /var/lib/php/session
php_value:
  - memory_limit: 1536M
  - post_max_size: 128M
  - upload_max_filesize: 64M
  - apc.shm_size: 128M
  - apc.entries_hint: 16384
  - apc.ttl: 7200
  - opcache.enable: 1
  - opcache.memory_consumption: 256
  - opcache.max_accelerated_files: 100000
  - opcache.interned_strings_buffer: 8
  - opcache.revalidate_freq: 10
  - opcache.fast_shutdown: 1
  - xdebug.remote_enable:  1
  - xdebug.remote_autostart: 1
  - xdebug.remote_connect_back: 1
  - xdebug.idekey: PHPSTORM

php_fpm_listen: /var/run/php-fpm/php-fpm.sock
php_fpm_listen_owner: nginx
php_fpm_listen_group: nginx
php_fpm_user: nginx
php_fpm_group: nginx

# Mysql
mysql_root_password: root
mysql_config_server:
  - character_set_server: utf8mb4
mysql_config_mysqld:
  - max_allowed_packet: 64M
  - key_buffer: 32M
  - query_cache_size: 128M
  - innodb_large_prefix: true
  - innodb_file_format: barracuda
  - innodb_file_per_table: 1
  - innodb_buffer_pool_size: 1024M
  - innodb_log_file_size: 512M
  - innodb_log_buffer_size: 64M
mysql_config_mariadb: []
mysql_config_embedded: []

# Run specified scripts after VM is provisioned. Path is relative to the
# `provisioning/site` file.
post_provision_scripts: []
