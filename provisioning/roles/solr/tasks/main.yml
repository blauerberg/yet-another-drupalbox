---
- stat: path={{ tika_install_path }}
  register: tika

- block:
  - name: Download Tika App
    get_url:
      url=http://archive.apache.org/dist/tika/tika-app-{{ tika_version }}.jar
      dest=/tmp/tika-app-{{ tika_version }}.jar

  - name: Create root directory for tika.
    file: path={{ tika_install_path }} state=directory owner=root group=root mode=0755
    become: yes

  - name: Move Tika App
    shell: mv /tmp/tika-app-{{ tika_version }}.jar {{ tika_install_path }}
  when: not tika.stat.exists

- stat: path={{ solr_install_path }}
  register: solr

- block:
  - name: Download archive
    get_url: 
      url="http://archive.apache.org/dist/lucene/solr/{{ solr_version }}/solr-{{ solr_version }}.tgz"
      dest=/tmp/solr-{{ solr_version }}.tgz
  
  - name: Extract solr archive
    unarchive:
      src: /tmp/solr-{{ solr_version }}.tgz
      dest: /tmp
      copy: no
    environment:
      LANG: C
      LC_ALL: C
      LC_MESSAGES: C
  
  - name: Move solr distribution
    shell: mv /tmp/solr-{{ solr_version }} {{ solr_install_path }}
    become: yes

  - name: Download Apache Solr module to get scheme for Drupal
    get_url:
      url=https://ftp.drupal.org/files/projects/apachesolr-7.x-1.8.tar.gz
      dest=/tmp/apachesolr-{{ apachesolr_module_version }}.tar.gz

  - name: Extract module archive
    unarchive:
      src: /tmp/apachesolr-{{ apachesolr_module_version }}.tar.gz
      dest: /tmp
      copy: no
    environment:
      LANG: C
      LC_ALL: C
      LC_MESSAGES: C
 
  - name: Rename core directory 
    command: mv {{ solr_install_path }}/example {{ solr_install_path }}/core

  - name: Remove default configuration
    #file:
    #  path: "{{ item }}"
    #  state: absent
    #with_fileglob:
    #  - "{{ solr_install_path }}/core/solr/collection1/conf/*"
    shell: /bin/rm -rf {{ solr_install_path }}/core/solr/collection1/conf/*
    become: yes

  - name: Copy solr configuration for Drupal
    #copy:
    #  src={{ item }}
    #  dest={{ solr_install_path }}/core/solr/collection1/conf/
    #with_fileglob:
    #  - "/tmp/apachesolr/solr-conf/solr-4.x/*"
    shell: cp -f /tmp/apachesolr/solr-conf/solr-4.x/* {{ solr_install_path }}/core/solr/collection1/conf/
    become: yes

  - name: Set startup script
    template:
      src: "startup.sh.j2"
      dest: "{{ solr_install_path }}/core/startup.sh"
      mode: "0755"
  
  - name: Configure service
    template:
      src: "{{ item }}.j2"
      dest: "/{{ item }}"
      mode: "0640"
    with_items:
      - "etc/systemd/system/solr.service"
    when: ansible_os_family == 'RedHat' and ansible_distribution != 'Amazon'

  - name: Configure init script
    template:
      src: "etc/init.d/solr.j2"
      dest: "/etc/init.d/solr"
      mode: "0755"
    when: ansible_distribution == 'Amazon'
  
  - name: Start service
    service:
      name: solr
      state: started
      enabled: yes
